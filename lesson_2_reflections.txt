What happens when you initialize a repository? Why do you need to do it?

	Git creates config files that allow git to recognize the folder as a git repository. You need to do it so that git recognizes the folder as a git repository rather than any other folder.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allows you to commit a subset of the working directory. Without the staging area, some other mechanism would be required to commit a subset of the working directory.

How can you use the staging area to make sure you have one commit per logical
change?

	Only stage files that are related to the same logical change. Then commit. If more files have changed, repeat the stage and commit process separately for the reamining files.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	Experimental features. Branches would allow bugfixes to continue on the master branch without overlapping with development of experimental features.

How do the diagrams help you visualize the branch structure?

	It's almost impossible to visualize the branch structure without the diagrams! Very helpful to see them graphically in relation to one another, rather than as a list.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	The commits for the old branch remain but the label for the old branch does not. The commit that merges two branches now has two parents: one for each branch.
	We use the diagram because it preserves the history of the individual commits much better than by simply using timestamps.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?

	Pros: Much faster and easier. Cons: Risk of breaking functionality or having to manually deal with merge conflicts anyway. Failure to understand nature of all changes that were silently merged without error.